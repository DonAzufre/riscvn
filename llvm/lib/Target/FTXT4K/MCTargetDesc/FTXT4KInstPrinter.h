//
// Created by DonAzufre on 25-5-5.
//

#ifndef FTXT4KINSTPRINTER_H
#define FTXT4KINSTPRINTER_H

#include "MCTargetDesc/FTXT4KMCTargetDesc.h"
#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
    class FTXT4KInstPrinter : public MCInstPrinter {
    public:
        FTXT4KInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                          const MCRegisterInfo &MRI)
            : MCInstPrinter(MAI, MII, MRI) {}

        void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                       const MCSubtargetInfo &STI, raw_ostream &O) override;

        void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                          const char *Modifier = nullptr);

        void printJmpTargetOperand(const MCInst *MI, uint64_t Address, unsigned OpNo,
                           raw_ostream &O, const char *Modifier = nullptr);

        void printCondExecuteCtlOperand(const MCInst *MI, uint64_t Address, unsigned OpNo,
                           raw_ostream &O, const char *Modifier = nullptr);

        // Autogenerated by tblgen.
        void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
        bool printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &O);
        void printCustomAliasOperand(const MCInst *MI, uint64_t Address,
                                     unsigned OpIdx, unsigned PrintMethodIdx,
                                     raw_ostream &O);
        static const char *getRegisterName(MCRegister Reg);
        std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
    };
}

#endif //FTXT4KINSTPRINTER_H
