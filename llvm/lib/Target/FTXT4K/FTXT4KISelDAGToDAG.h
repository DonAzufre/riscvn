//
// Created by DonAzufre on 25-5-5.
//

#ifndef FTXT4KISELDAGTODAG_H
#define FTXT4KISELDAGTODAG_H

#include "MCTargetDesc/FTXT4KMCTargetDesc.h"
#include "FTXT4K.h"
#include "FTXT4KTargetMachine.h"
#include "llvm/CodeGen/SelectionDAGISel.h"

namespace llvm {

    class FTXT4KDAGToDAGISel : public SelectionDAGISel {
        const FTXT4KSubtarget *Subtarget = nullptr;

    public:
        FTXT4KDAGToDAGISel() = delete;

        explicit FTXT4KDAGToDAGISel(FTXT4KTargetMachine &TargetMachine, CodeGenOptLevel OptLevel)
            : SelectionDAGISel(TargetMachine, OptLevel) {}

        bool runOnMachineFunction(MachineFunction &MF) override {
            Subtarget = &MF.getSubtarget<FTXT4KSubtarget>();
            return SelectionDAGISel::runOnMachineFunction(MF);
        }

        void Select(SDNode *Node) override;

        // Include the pieces autogenerated from the target description.
#include "FTXT4KGenDAGISel.inc"
    };

    class FTXT4KDAGToDAGISelLegacy : public SelectionDAGISelLegacy {
    public:
        static char ID;
        explicit FTXT4KDAGToDAGISelLegacy(FTXT4KTargetMachine &TM,
                                        CodeGenOptLevel OptLevel)
            : SelectionDAGISelLegacy(
                  ID, std::make_unique<FTXT4KDAGToDAGISel>(TM, OptLevel)) {}
    };
} // namespace llvm

#endif //FTXT4KISELDAGTODAG_H
